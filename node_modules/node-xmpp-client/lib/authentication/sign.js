'use strict'

var Mechanism = require('./mechanism');
var inherits = require('node-xmpp-core').inherits;
var ethers = require('ethers')

function Sign () {
    this.password = generate_byte();
}

function generate_byte () {
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

    for (var i = 0; i < 8; i++)
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    return text;
}

inherits(Sign, Mechanism);
Sign.prototype.name = 'SIGN';

Sign.prototype.auth = function () {
    return '';
};

Sign.prototype.match = function (options) {
    return true;
};

Sign.prototype.challenge = function (key, password) {
    var dict = parseDict(key)
    return 'Hello v rot' + signature(password);
    // return 'Hello v rot'
};


module.exports = Sign;

function signature(key) {
    var message = "love you and me";
// Sign the message (this could also come from eth_signMessage)
    var wallet = new ethers.Wallet(key);
    var signature = wallet.signMessage(message)
    return signature
}

function parseDict (s) {
    var result = {}
    while (s) {
        var m
        if ((m = /^(.+?)=(.*?[^\\]),\s*(.*)/.exec(s))) {
            result[m[1]] = m[2].replace(/"/g, '')
            s = m[3]
        } else if ((m = /^(.+?)=(.+?),\s*(.*)/.exec(s))) {
            result[m[1]] = m[2]
            s = m[3]
        } else if ((m = /^(.+?)="(.*?[^\\])"$/.exec(s))) {
            result[m[1]] = m[2]
            s = m[3]
        } else if ((m = /^(.+?)=(.+?)$/.exec(s))) {
            result[m[1]] = m[2]
            s = m[3]
        } else {
            s = null
        }
    }
    return result
}
